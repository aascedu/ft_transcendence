"""
Django settings for petrus_project project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from shared.settings import SHARED_MIDDLEWARE as shared_middleware, add_prometheused_middleware
from shared.settings import add_prometheused_apps
from pathlib import Path
from pathlib import os
from shared.jwt_management import get_ressource_from_vault
try:
    from tokens.token import vault_token
except ModuleNotFoundError:
    print("Warn vault_token not found")

from socket import SOCK_STREAM

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-w3au-kh&6)4s1=0rx%zb=vy6g=3#j4-k0j!mkisz)kccnum%_f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'batch42.me', 'petrus']

# Application definition

PROJECT_APPS = [
    "signin",
]

INSTALLED_APPS = add_prometheused_apps(PROJECT_APPS)

PROJECT_OWN_MIDDLEWARE = []

MIDDLEWARE = add_prometheused_middleware(shared_middleware + PROJECT_OWN_MIDDLEWARE)

ROOT_URLCONF = 'petrus_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'petrus_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': get_ressource_from_vault(vault_token, 'petrus/petrus_db', 'db'),
        'USER': get_ressource_from_vault(vault_token, 'petrus/petrus_user', 'user'),
        'PASSWORD': get_ressource_from_vault(vault_token, 'petrus/petrus_password', 'password'),
        'HOST': 'petrus_db',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "logstash": {
            "()": "syslog_rfc5424_formatter.RFC5424Formatter"
        }
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "level": "DEBUG",
        },
        "logstash": {
            "level": "DEBUG",
            "class": "logging.handlers.SysLogHandler",
            "address": ("aether", 5141),
            "socktype": SOCK_STREAM,
            "formatter" : "logstash",
        },
    },
    "loggers": {
        "": {
            "handlers": ["logstash", "console"],
            "level": "DEBUG",
            "propagate": False,
        },
    },
}
