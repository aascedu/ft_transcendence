# This section sets the user and the number of worker processes.
# It also defines the error log file and the PID file for Nginx.
user                nginx;
worker_processes    auto;
pid                 /var/run/nginx.pid;
error_log           /var/log/nginx/error.log    warn;

# Load external Nginx modules required for modsecurity and vhost traffic status.
load_module         modules/ngx_http_modsecurity_module.so;
load_module         modules/ngx_http_vhost_traffic_status_module.so;

# This section defines parameters for the event module.
# It sets the maximum number of connections per worker.
events
{
    worker_connections  1024;
}

# This section configures the HTTP server.
http
{

# Map headers for HTTP upgrade.
    map $http_upgrade $connection_upgrade
    {
        default                     "Upgrade";
        ''                          close;
    }

# Map for conditional logging that allows excluding trivial
# or unimportant log entries from the access log
# Here excludes requests with HTTP status codes 2xx (Success) 
# and 3xx (Redirection)
    map $status $loggable
    {
        ~^[23]  0;
        default 1;
    }

# Define the log format enables tracking different time values
# between NGINX and an upstream server that may help to diagnose
# a problem if your website experience slowdowns
    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';

# Define the access log file and format.
    # access_log          /var/log/nginx/access.log   upstream_time if=$loggable;
    access_log          /var/log/nginx/access.log   upstream_time;

# Include common MIME types.
    include                     /etc/nginx/mime.types;
    default_type                application/octet-stream;

# Define a shared memory zone for vhost traffic status.
    vhost_traffic_status_zone;

# Enable modsecurity with the specified rules file.
    modsecurity                 on;
    modsecurity_rules_file      /etc/nginx/modsec/modsec-config.conf;

# Enable sendfile and set the keepalive timeout.
    sendfile            on;
    keepalive_timeout   65;

# Include additional configuration files.
    include             /etc/nginx/conf.d/*.conf;
    include             /etc/nginx/conf.d/sites-enabled/*.conf;

    # proxy_cache_path    /data/nginx/cache   keys_zone=mycache:10m   loader_threshold=300    loader_files=200;


 # Define server blocks for specific domains.
    server
    {
# Server configuration for batch42.me domain.
        server_name                 batch42.me max_fails=5 fail_timeout=10s;
        listen                      80;
        listen                      [::]:80;
        listen                      443 ssl;
        listen                      [::]:443 ssl;
        ssl_protocols               TLSv1.2 TLSv1.3;
        ssl_certificate             /etc/nginx/ssl/ft_transcendence.crt;
        ssl_certificate_key         /etc/nginx/ssl/ft_transcendence.key;
        
        # ssl_certificate             /etc/letsencrypt/live/batch42.me/fullchain1.pem;
        # ssl_certificate_key         /etc/letsencrypt/live/batch42.me/privkey1.pem;
        index   index.html;

# Location block for handling requests to root.
        location /
        {
            proxy_pass              http://malevitch/;
            proxy_http_version      1.1;

            proxy_redirect          off;
            proxy_set_header        Host                $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto   $scheme;
            error_page              404                 /errorPages/404.html;
            proxy_intercept_errors  on;

            # proxy_cache             mycache;
            # proxy_cache_key         "$host$request_uri$cookie_user";
            # proxy_cache_min_uses    5;
            # proxy_cache_methods     GET HEAD POST;
            # proxy_cache_valid       200 302 10m;
            # proxy_cache_valid       404      1m;
            # proxy_cache_bypass      $http_cookie;
        }

# Location block for handling requests to /malevitch/.
        location /malevitch/
        {
            proxy_pass              http://malevitch/;
            proxy_http_version      1.1;

            proxy_redirect          off;
            proxy_set_header        Host                $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            # internal;
            # error_page              404                 /404.html;
            # proxy_intercept_errors  on;

            # proxy_cache             mycache;
            # proxy_cache_key         "$host$request_uri$cookie_user";
            # proxy_cache_min_uses    5;
            # proxy_cache_methods     GET HEAD POST;
            # proxy_cache_valid       200 302 10m;
            # proxy_cache_valid       404      1m;
            # proxy_cache_bypass      $http_cookie;
        }

# Location block for handling requests to /apollo/.
        location /apollo/
        {
            proxy_pass              https://apollo:9200/;
            proxy_http_version      1.1;

            proxy_redirect          off;
            proxy_set_header        Host                $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            error_page              404                 /404.html;
            proxy_intercept_errors  on;
            # Configure SSL for proxying to Elasticsearch
            proxy_ssl_trusted_certificate   /etc/nginx/ssl/ft_transcendence.crt;
            proxy_ssl_certificate           /etc/nginx/ssl/elastic.crt;
            proxy_ssl_certificate_key       /etc/nginx/ssl/elastic.key;
        }

# Location block for handling requests to /iris/.
        location /iris/
        {
            modsecurity_rules_file  /etc/nginx/modsec/iris-whitelist.conf;

            proxy_pass              http://iris:5601;
            proxy_http_version      1.1;

            proxy_redirect          off;
            proxy_set_header        Host                $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto   $scheme;

            error_page              404                 /404.html;
            proxy_intercept_errors  on;
        }

# Location block for handling requests to /aether/.
        location /aether/
        {
            proxy_pass              http://aether:5400/;
            proxy_http_version      1.1;

            proxy_redirect          off;
            proxy_set_header        Host                $host;
            proxy_set_header        X-Real-IP           $remote_addr;
            error_page              404                 /404.html;
            proxy_intercept_errors  on;
            internal;
        }

# Other location blocks for different services...

        # Location block for displaying vhost traffic status.
        location /status
        {
            vhost_traffic_status_display;
            vhost_traffic_status_display_format html;
        }

        location /errorPages/
        {
            root /usr/share/nginx/html;
        }
    }
}
