input {
    tcp {
        host => "0.0.0.0"
        port => 5140
        type => "nginx"
    }
    udp {
        host => "0.0.0.0"
        port => 5140
        type => "nginx"
    }
    tcp {
        host => "0.0.0.0"
        port => 5141
        type => "syslog5424"
    }
    udp {
        host => "0.0.0.0"
        port => 5141
        type => "syslog5424"
    }
}

filter {
    if [type] == "nginx" {
        grok {
            match => { "message" => "%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:syslog_hostname} %{DATA:syslog_program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:syslog_message}" }
            add_field => [ "received_at", "%{@timestamp}" ]
            add_field => [ "received_from", "%{host}" ]
            add_field => [ "program", "%{syslog_program}" ]
        }
        date {
            match => [ "syslog_timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
        }
    }
    if [type] == "syslog5424" {
        grok {
            match => { "message" => "%{POSINT:syslog_version} %{TIMESTAMP_ISO8601:syslog_timestamp} (?:-|%{SYSLOGHOST:syslog_hostname})? (?:-|%{DATA:syslog_program}) (?:-|%{DATA:syslog_pid})? (?:-|%{DATA:syslog_msgid})? %{GREEDYDATA:syslog_message}" }
            add_field => [ "received_at", "%{@timestamp}" ]
            add_field => [ "received_from", "%{host}" ]
            add_field => [ "program", "%{syslog_program}" ]
        }
        date {
            match => [ "syslog_timestamp", "ISO8601" ]
        }
        mutate {
            replace => { "program" => "%{[@metadata][input][tcp][source][name]}" }
            replace => { "received_from" => "%{[@metadata][input][tcp][source][name]}" }
        }
    }
}

output {
    elasticsearch {
        # ilm_rollover_alias => "my_policy_index"
        # ilm_pattern => "000001"
        # ilm_policy => "my_policy"
        # manage_template => true
        # template => "/etc/logstash/ilm.json"
        # template_name => "my_policy_template"
        index => "%{[program]}-%{+YYYY.MM.dd}"

        hosts => "${ELASTIC_HOSTS}"
        user => "${ELASTIC_USER}"
        password => "${ELASTIC_PASSWORD}"
        ssl_enabled => true
        ssl_certificate_authorities => ["config/certs/ca/ca.crt"]
        ssl_certificate => "config/certs/aether/aether.crt"
        ssl_key => "config/certs/aether/aether.pkcs8.key"
    }
}
