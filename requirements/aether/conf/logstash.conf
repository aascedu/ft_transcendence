input {
    file {
        mode => "read"
        path => "/usr/share/logstash/ingest_data/*"
        file_completed_action => "log" # this tells logstash to log to the file specified in file_completed_log_path once its done reading the input file.
        file_completed_log_path => "/usr/share/logstash/ingest_data/logstash_completed.log"
        type => "test"
    }
    syslog {
        host => "aether"
        port => 5140
    }
}

filter {
    # if [program] == "nginx_access" {
    #     grok {
    #         patterns_dir => "/usr/share/logstash/patterns"
    #         match => { "message" => "%{NGINX_ACCESS}" }
    #         remove_tag => ["nginx_access", "_grokparsefailure"]
    #         add_field => {
    #             "type" => "nginx_access"
    #         }
    #         remove_field => ["program"]
    #     }
    # }
}

output {
    if [type] == "test"
    {
        elasticsearch {
            index => "logstash-%{+YYYY.MM.dd}"

            hosts=> "${ELASTIC_HOSTS}"
            user=> "${ELASTIC_USER}"
            password=> "${ELASTIC_PASSWORD}"

            ssl_enabled => true
            ssl_certificate_authorities => ["config/certs/ca/ca.crt"]
            ssl_certificate => "config/certs/aether/aether.crt"
            ssl_key => "config/certs/aether/aether.pkcs8.key"
        }
    }
    if [type] == "nginx_access"
    {
        elasticsearch {
            index => "nginx_access-%{+YYYY.MM.dd}"

            hosts=> "${ELASTIC_HOSTS}"
            user=> "${ELASTIC_USER}"
            password=> "${ELASTIC_PASSWORD}"

            ssl_enabled => true
            ssl_certificate_authorities => ["config/certs/ca/ca.crt"]
            ssl_certificate => "config/certs/aether/aether.crt"
            ssl_key => "config/certs/aether/aether.pkcs8.key"
        }
    }
}
