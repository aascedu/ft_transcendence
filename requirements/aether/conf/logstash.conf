# # Adding inputs files here, here receiving from filebeats on his port
input {
    file {
        #https://www.elastic.co/guide/en/logstash/current/plugins-inputs-file.html
        #default is TAIL which assumes more data will come into the file.
        #change to mode => "read" if the file is a compelte file.  by default, the file will be removed once reading is complete -- backup your files if you need them.
        mode => "tail"
        path => "/usr/share/logstash/ingest_data/*"
    }
}

# # Adding filters / logstash plugins configuration here
filter {
  grok {
    match => { "message" => '%{IPORHOST:[nginx][access][remote_ip]} - %{DATA:[nginx][access][user_name]} \[%{HTTPDATE:[nginx][access][time]}\] "%{WORD:[nginx][access][method]} %{DATA:[nginx][access][url]} HTTP/%{NUMBER:[nginx][access][http_version]}" %{NUMBER:[nginx][access][response_code]} %{NUMBER:[nginx][access][body_sent][bytes]} "%{DATA:[nginx][access][referrer]}" "%{DATA:[nginx][access][user_agent]}"' }
    remove_field => "message"
  }
}

output {
  elasticsearch {
    index => "logstash-%{+YYYY.MM.dd}"

    hosts => ["https://apollo:9200"]
    user => "${ELASTIC_USER}"
    password => "${ELASTIC_PASSWORD}"

    ssl_enabled => true
    ssl_client_authentication => "required"
    ssl_certificate_authorities => ["config/certs/ca/ca.crt"]
    ssl_certificate => "config/certs/aether/aether.crt"
    ssl_key => "config/certs/aether/aether.pkcs8.key"
  }
  # stdout {}
}
